Excepciones con "try/catch" y "throw"

Sintaxis b�sica con try/catch y throw:

public class ejemplo.Main {
    public static void main(String[] args) {
        try {
            metodoQueLanzaExcepcion(); // Se llama a un m�todo que puede lanzar una excepci�n
        } catch (IllegalArgumentException e) {
            System.out.println("Excepci�n capturada: " + e.getMessage());
        }
    }

    public static void metodoQueLanzaExcepcion() throws IllegalArgumentException {
        throw new IllegalArgumentException("Se ha lanzado una excepci�n de tipo IllegalArgumentException");
    }
}
Descripci�n:
1. throw: Se utiliza dentro de un m�todo o bloque de c�digo para lanzar una excepci�n expl�cita.
2. try: Bloque que contiene el c�digo que podr�a lanzar una excepci�n.
3. catch: Bloque que maneja la excepci�n lanzada en el bloque try.
4. throws: Se usa en la declaraci�n del m�todo para indicar que este m�todo puede lanzar una excepci�n espec�fica.
Ejemplo de uso con explicaci�n:

public class ejemplo.Main {
    public static void main(String[] args) {
        try {
            verificarEdad(15); // Intenta verificar la edad, pero no cumple la condici�n
        } catch (Exception e) {
            System.out.println("Error: " + e.getMessage()); // Captura la excepci�n y muestra el mensaje de error
        }
    }

    public static void verificarEdad(int edad) throws Exception {
        if (edad < 18) {
            throw new Exception("La edad debe ser mayor o igual a 18"); // Lanza la excepci�n si la edad es menor
        }
    }
}
Explicaci�n del ejemplo:
1. El m�todo verificarEdad(int edad) comprueba si la edad es mayor o igual a 18. Si no lo es, lanza una excepci�n con throw.
2. En el m�todo main, el bloque try llama a verificarEdad(15), lo que provocar� que se lance la excepci�n.
3. La excepci�n es capturada en el bloque catch, y se imprime el mensaje de error.
	Este patr�n es �til para situaciones en las que quieres lanzar una excepci�n personalizada y luego capturarla en un bloque try/catch para manejarla adecuadamente.

